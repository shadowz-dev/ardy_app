"""
Django settings for ardy_app project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0t$6@591)80i0h5(1j(a1gc02htyz35-s1v+^mck(i!p2*6=3='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.sites',
    # Django Allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # custom moduels
    'core.apps.CoreConfig',
    'chat',
    'Website',
    # Third Party modules
    'rest_framework',
    'rest_framework.authtoken',
    'knox',
    'channels',
    'ckeditor',
    'corsheaders',

]

# Required for django allauth
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'ardy_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ardy_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Dubai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

CKEDITOR_BASEPATH = "/my_static/ckeditor/ckeditor/"
Base_URL = 'http://127.0.0.1:8000'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Default Auth model 
AUTH_USER_MODEL = 'core.User'

# Rest Framework settings
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'knox.auth.TokenAuthentication',
        ),
}

# Django Allauth settings
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_USERNAME_REQUIRED = True
LOGIN_REDIRECT_URL = '/'

# Channels settings

ASGI_APPLICATION = "ardy_app.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",#"channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("localhost", 6379)],
        },
    },
}

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
]

DEFAULT_FROM_EMAIL = 'noreply@ardy-app.com'


#print("--- Attempting to import CoreConfig directly in settings.py ---", file=sys.stderr)
#try:
#    from django.apps import apps
#    cfg = apps.get_app_config('core') # 'core' is the app label
#    print(f"--- Successfully got app_config for 'core': {cfg.__class__.__name__} from {cfg.__module__} ---", file=sys.stderr)
#    if hasattr(cfg, 'ready') and callable(cfg.ready):
#        print(f"--- CoreConfig instance HAS a callable 'ready' method. ---", file=sys.stderr)
#    else:
#        print(f"--- CoreConfig instance DOES NOT HAVE a callable 'ready' method or it's missing. ---", file=sys.stderr)
#
#except LookupError:
#    print("--- FAILED to get_app_config for 'core'. Django doesn't recognize it properly. ---", file=sys.stderr)
#except ImportError as e:
#    print(f"--- FAILED to import or lookup CoreConfig due to ImportError: {e} ---", file=sys.stderr)
#except Exception as e:
#    import traceback
#    print(f"--- UNEXPECTED ERROR getting/inspecting CoreConfig: {e} ---", file=sys.stderr)
#    traceback.print_exc(file=sys.stderr)
#print("--- Finished settings.py direct import check ---", file=sys.stderr)
# Generated by Django 3.2.25 on 2024-11-19 07:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('user_type', models.CharField(choices=[('Customer', 'Customer'), ('Consultant', 'Consultant'), ('Interior Designer', 'Interior Designer'), ('Construction', 'Construction'), ('Maintainance', 'Maintainance'), ('Smart_Home', 'Smart_Home')], max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format : '+99999999999'. Up to 14 digits allowed.", regex='^\\+?1?\\d{9,14}$')])),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('news_letter', models.BooleanField(default=False)),
                ('offers_and_discounts', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('signup_type', models.CharField(choices=[('Manual', 'Manual'), ('Google', 'Google'), ('Apple', 'Apple')], default='Manual', help_text='Type of Signup.', max_length=6)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PhoneOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('phone', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+9999999999'. Up to 14 digits allowed.", regex='^\\+?1?\\d{9,14}$')])),
                ('password', models.CharField(default=0, max_length=50)),
                ('otp', models.CharField(blank=True, max_length=9, null=True)),
                ('count', models.IntegerField(default=0, help_text='Number of otp sent')),
                ('logged', models.BooleanField(default=False, help_text='If otp verification got successful')),
                ('forgot', models.BooleanField(default=False, help_text='only true for forgot password')),
                ('forgot_logged', models.BooleanField(default=False, help_text='Only true if validate otp forgot get successful')),
                ('referral_code', models.CharField(blank=True, max_length=200, null=True)),
                ('signup_type', models.CharField(choices=[('Manual', 'Manual'), ('Google', 'Google'), ('Apple', 'Apple')], default='Manual', help_text='Type of Signup.', max_length=6)),
                ('social_login_token', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('notification_token', models.CharField(blank=True, default=None, help_text='We will send the notification via this token.', max_length=300, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SmartHomeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('expertise', models.CharField(blank=True, max_length=100)),
                ('experience', models.IntegerField(blank=True)),
                ('portfolio', models.URLField(blank=True)),
                ('introduction', models.TextField(blank=True)),
                ('projects_completed', models.IntegerField(blank=True)),
                ('company_profile', models.FileField(blank=True, upload_to='company_profiles/smart_home/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MaintainanceProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('expertise', models.CharField(blank=True, max_length=100)),
                ('experience', models.IntegerField(blank=True)),
                ('portfolio', models.URLField(blank=True)),
                ('introduction', models.TextField(blank=True)),
                ('jobs_completed', models.IntegerField(blank=True)),
                ('company_profile', models.FileField(blank=True, upload_to='company_profiles/maintainances/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InteriorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('expertise', models.CharField(blank=True, max_length=100)),
                ('experience', models.IntegerField(blank=True)),
                ('portfolio', models.URLField(blank=True)),
                ('introduction', models.TextField(blank=True)),
                ('projects_completed', models.IntegerField(blank=True)),
                ('company_profile', models.FileField(blank=True, upload_to='company_profiles/interiors/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('land_details', models.TextField(blank=True)),
                ('property_type', models.CharField(blank=True, max_length=100)),
                ('budget', models.IntegerField(blank=True)),
                ('property_status', models.CharField(blank=True, max_length=100)),
                ('project_details', models.TextField(blank=True)),
                ('attachments', models.FileField(blank=True, upload_to='customers/attachments')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConsultantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('expertise', models.CharField(blank=True, max_length=100)),
                ('experience', models.IntegerField(blank=True)),
                ('portfolio', models.URLField(blank=True)),
                ('introduction', models.TextField(blank=True)),
                ('projects_completed', models.IntegerField(blank=True)),
                ('company_profile', models.FileField(blank=True, upload_to='company_profiles/consultants/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('expertise', models.CharField(blank=True, max_length=100)),
                ('experience', models.IntegerField(blank=True)),
                ('portfolio', models.URLField(blank=True)),
                ('introduction', models.TextField(blank=True)),
                ('projects_completed', models.IntegerField(blank=True)),
                ('company_profile', models.FileField(blank=True, upload_to='company_profiles/constructions/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]

# Generated by Django 3.2.25 on 2025-05-24 10:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0024_alter_customerprofile_budget'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('Customer', 'Customer'), ('Consultant', 'Consultant'), ('Interior Designer', 'Interior Designer'), ('Construction', 'Construction'), ('Maintenance', 'Maintenance'), ('Smart_Home', 'Smart_Home'), ('Admin', 'Admin')], max_length=50)),
                ('default_order', models.PositiveIntegerField(default=100, help_text='Default order in a standard project lifecycle (lower numbers first). Use unique numbers for standard flow.')),
                ('is_standard_phase_service', models.BooleanField(default=False, help_text='Include this service type when setting up standard project phases?')),
                ('default_phase_title_template', models.CharField(blank=True, help_text="Template for the phase title, e.g., 'Initial {} Design'. '{}' will be project title.", max_length=150, null=True)),
                ('default_phase_description_template', models.TextField(blank=True, help_text="Template for the phase description. '{}' will be project title.", null=True)),
            ],
            options={
                'ordering': ['default_order', 'name'],
            },
        ),
        migrations.RemoveField(
            model_name='projects',
            name='primary_service_provider',
        ),
        migrations.AddField(
            model_name='phase',
            name='customer_attachement',
            field=models.ManyToManyField(blank=True, related_name='phase_customer_attachement', to='core.Document'),
        ),
        migrations.AddField(
            model_name='projects',
            name='project_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='phase',
            name='service_provider',
            field=models.ForeignKey(blank=True, help_text='The service provider assigned to this phase.', limit_choices_to={'user_type__in': ['C', 'I', 'C', 'M', 'S']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_phases', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='constructionprofile',
            name='services_offered',
            field=models.ManyToManyField(blank=True, related_name='construction_services_offered', to='core.ServiceType'),
        ),
        migrations.AddField(
            model_name='consultantprofile',
            name='services_offered',
            field=models.ManyToManyField(blank=True, related_name='consultant_services_offered', to='core.ServiceType'),
        ),
        migrations.AddField(
            model_name='interiorprofile',
            name='services_offered',
            field=models.ManyToManyField(blank=True, related_name='interior_services_offered', to='core.ServiceType'),
        ),
        migrations.AddField(
            model_name='maintenanceprofile',
            name='services_offered',
            field=models.ManyToManyField(blank=True, related_name='maintenance_services_offered', to='core.ServiceType'),
        ),
        migrations.AddField(
            model_name='phase',
            name='required_service_type',
            field=models.ForeignKey(blank=True, help_text=' The primary type of service required for this phase.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.servicetype'),
        ),
        migrations.AddField(
            model_name='smarthomeprofile',
            name='services_offered',
            field=models.ManyToManyField(blank=True, related_name='smart_services_offered', to='core.ServiceType'),
        ),
    ]
